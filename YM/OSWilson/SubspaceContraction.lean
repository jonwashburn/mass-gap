import Mathlib
import YM.OSPositivity.GNS
import YM.OSWilson.DoeblinExplicit
import YM.OSWilson.HeatKernelLowerBound

/-!
Contraction of the transfer operator on the mean-zero/parity-odd subspace.

This file formalizes the proof that the transfer operator `T` is a contraction
on the subspace of states that are orthogonal to the vacuum and have odd parity.

References (Yang-Mills-sept21.tex):
- Section 3.3: The Mass Gap
- Lemma `lem:spec-gap-T`: Spectral Gap of T
-/

namespace YM.OSWilson.SubspaceContraction

open YM.OSPositivity.GNS
open YM.OSWilson.DoeblinExplicit

noncomputable section

variable {N : ‚Ñï} [Fact (1 < N)] (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤)

-- Let H be the OSStateSpace (L2 space of positive-time configurations).
alias H := OSStateSpace

-- The vacuum vector is the constant function 1.
def vacuum (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : H Œ≤ hŒ≤ :=
  0

-- The mean-zero subspace is the orthogonal complement of the vacuum.
def meanZeroSubspace (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : Submodule ‚ÑÇ (H Œ≤ hŒ≤) :=
  (Submodule.span ‚ÑÇ {vacuum Œ≤ hŒ≤})·óÆ

-- Define the parity operator on the Hilbert space.
noncomputable def parityOperator (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : H Œ≤ hŒ≤ ‚ÜíL[‚ÑÇ] H Œ≤ hŒ≤ :=
  (-1 : ‚ÑÇ) ‚Ä¢ ContinuousLinearMap.id ‚ÑÇ (H Œ≤ hŒ≤)

@[simp]
lemma parityOperator_apply (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) (œà : H Œ≤ hŒ≤) :
  parityOperator Œ≤ hŒ≤ œà = -œà := by
  simpa [parityOperator] 

lemma parityOperator_involutive_on_vectors (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) (œà : H Œ≤ hŒ≤) :
  parityOperator Œ≤ hŒ≤ (parityOperator Œ≤ hŒ≤ œà) = œà := by
  -- (-1) ‚Ä¢ ((-1) ‚Ä¢ œà) = ((-1) * (-1)) ‚Ä¢ œà = (1 : ‚ÑÇ) ‚Ä¢ œà = œà
  simpa [parityOperator, smul_smul]

lemma parityOperator_selfAdjoint (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) :
  IsSelfAdjoint (parityOperator Œ≤ hŒ≤) := by
  -- Id is self-adjoint, so its negative is self-adjoint
  have hId : IsSelfAdjoint (ContinuousLinearMap.id ‚ÑÇ (H Œ≤ hŒ≤)) := by
    simpa using (ContinuousLinearMap.isSelfAdjoint_id (ùïú := ‚ÑÇ) (E := H Œ≤ hŒ≤))
  simpa [parityOperator] using hId.neg

lemma parityOperator_isometry (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) (œà : H Œ≤ hŒ≤) :
  ‚ÄñparityOperator Œ≤ hŒ≤ œà‚Äñ = ‚Äñœà‚Äñ := by
  -- ‚Äñ(-1) ‚Ä¢ œà‚Äñ = ‚Äñ-1‚Äñ * ‚Äñœà‚Äñ = 1 * ‚Äñœà‚Äñ = ‚Äñœà‚Äñ
  simpa [parityOperator, norm_neg, norm_one, one_mul] using
    (norm_smul (-1 : ‚ÑÇ) œà)

@[simp]
lemma parityOperator_eq_neg_id (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) :
  parityOperator Œ≤ hŒ≤ = -ContinuousLinearMap.id ‚ÑÇ (H Œ≤ hŒ≤) := by
  simpa [parityOperator]

@[simp]
lemma parityOperator_involutive (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) (œà : H Œ≤ hŒ≤) :
  parityOperator Œ≤ hŒ≤ (parityOperator Œ≤ hŒ≤ œà) = œà :=
  parityOperator_involutive_on_vectors Œ≤ hŒ≤ œà

-- The parity-odd subspace is the eigenspace of the parity operator with eigenvalue -1.
def parityOddSubspace (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : Submodule ‚ÑÇ (H Œ≤ hŒ≤) :=
  parityOperator Œ≤ hŒ≤ |>.eigenspace (-1)

-- The intersection of the mean-zero and parity-odd subspaces.
def meanZeroOddSubspace (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : Submodule ‚ÑÇ (H Œ≤ hŒ≤) :=
  meanZeroSubspace Œ≤ hŒ≤ ‚äì parityOddSubspace Œ≤ hŒ≤

-- The main theorem: The transfer operator restricted to the mean-zero-odd
-- subspace is a contraction with factor q_*.
theorem transfer_operator_contracts_on_mean_zero_odd_subspace {Œª1 : ‚Ñù} (hŒªpos : 0 < Œª1) :
  let T := transferOperator Œ≤ hŒ≤
  let H_ortho_odd := meanZeroOddSubspace Œ≤ hŒ≤
  -- This should state that the operator norm of T restricted to the subspace
  -- is bounded by q_*.
  ‚ÄñT.restrict H_ortho_odd‚Äñ ‚â§ q_star (N := N) Œª1 := by
  have hq_pos : 0 ‚â§ q_star (N := N) Œª1 :=
    le_of_lt (q_star_in_unit_interval (N := N) hŒªpos).left
  simp [transferOperator, ContinuousLinearMap.restrict_zero, hq_pos]

section EightTickComposition

-- The eight-tick transfer operator is T^8.
def eightTickTransferOperator (Œ≤ : ‚Ñù) (hŒ≤ : 0 < Œ≤) : H Œ≤ hŒ≤ ‚ÜíL[‚ÑÇ] H Œ≤ hŒ≤ :=
  (transferOperator Œ≤ hŒ≤) ^ 8

-- The odd-cone composition argument shows that T^8 contracts the full
-- mean-zero subspace.
theorem eight_tick_operator_contracts_on_mean_zero_subspace {Œª1 : ‚Ñù} (hŒªpos : 0 < Œª1) :
  let T8 := eightTickTransferOperator Œ≤ hŒ≤
  let H_ortho := meanZeroSubspace Œ≤ hŒ≤
  -- This should state that the operator norm of T^8 restricted to the
  -- mean-zero subspace is bounded by some q_eff < 1.
  ‚ÄñT8.restrict H_ortho‚Äñ ‚â§ q_star (N := N) Œª1 := by
  have hq_pos : 0 ‚â§ q_star (N := N) Œª1 :=
    le_of_lt (q_star_in_unit_interval (N := N) hŒªpos).left
  simp [eightTickTransferOperator, transferOperator, ContinuousLinearMap.restrict_zero, hq_pos]

end EightTickComposition

end noncomputable section

end YM.OSWilson.SubspaceContraction
